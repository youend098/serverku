#!/bin/bash

# Server IP
SERVER_IP=$(curl -s ifconfig.me)

# Animation characters
SPINNER=('⣾' '⣽' '⣻' '⢿' '⡿' '⣟' '⣯' '⣷')

function show_banner() {
  clear
  echo " ███╗   ███╗███████╗    ██╗   ██╗ ██████╗ ██╗   ██╗███████╗███╗   ██╗██████╗ "
  echo " ████╗ ████║██╔════╝    ╚██╗ ██╔╝██╔═══██╗██║   ██║██╔════╝████╗  ██║██╔══██╗"
  echo " ██╔████╔██║█████╗       ╚████╔╝ ██║   ██║██║   ██║█████╗  ██╔██╗ ██║██║  ██║"
  echo " ██║╚██╔╝██║██╔══╝        ╚██╔╝  ██║   ██║██║   ██║██╔══╝  ██║╚██╗██║██║  ██║"
  echo " ██║ ╚═╝ ██║██║            ██║   ╚██████╔╝╚██████╔╝███████╗██║ ╚████║██████╔╝"
  echo " ╚═╝     ╚═╝╚═╝            ╚═╝    ╚═════╝  ╚═════╝ ╚══════╝╚═╝  ╚═══╝╚═════╝ "
  echo ""
  echo " ---------------------------VPN MANAGEMENT SYSTEM----------------------------"
  echo "Server IP: $SERVER_IP"
  echo ""
}

function status_service() {
  local name=$1
  local service=$2
  if systemctl is-active --quiet "$service"; then
    echo "  ◉ $name: RUNNING"
  else
    echo "  ◉ $name: NOT RUNNING"
  fi
}

function spinner() {
  local pid=$1
  local delay=0.1
  while kill -0 $pid 2>/dev/null; do
    for i in "${SPINNER[@]}"; do
      echo -ne "\r  $i $2"
      sleep $delay
    done
  done
  echo -ne "\r"
}

function add_pptp_user() {
  echo ""
  echo "-------------------------------"
  echo "         ADD PPTP USER         "
  echo "-------------------------------"

  echo -ne "  » Username: "
  read username
  echo -ne "  » Password: "
  read password

  (echo "$username pptpd $password *" >> /etc/ppp/chap-secrets) &
  spinner $! "Adding user..."

  echo ""
  echo "  ✓ User PPTP $username added successfully!"
  echo ""
  echo "  --- PPTP Connection Details ---"
  echo "  Server: $SERVER_IP"
  echo "  Username: $username"
  echo "  Password: $password"
  echo "  Encryption: MPPE 128-bit"
  echo "  ------------------------------"
  echo ""

  (systemctl restart pptpd) &
  spinner $! "Restarting PPTP service..."
}

function add_l2tp_user() {
  echo ""
  echo "-------------------------------"
  echo "         ADD L2TP USER         "
  echo "-------------------------------"

  echo -ne "  » Username: "
  read username
  echo -ne "  » Password: "
  read password
  echo -ne "  » Pre-Shared Key (blank for default): "
  read psk

  if [ -z "$psk" ]; then
    psk=$(grep -oP '(?<=: PSK ")[^"]+' /etc/ipsec.secrets 2>/dev/null || echo "myvpnkey")
  fi

  (echo "$username * $password *" >> /etc/ppp/chap-secrets) &
  spinner $! "Adding user..."

  echo ""
  echo "  ✓ User L2TP $username added successfully!"
  echo ""
  echo "  --- L2TP/IPSec Connection Details ---"
  echo "  Server: $SERVER_IP"
  echo "  Username: $username"
  echo "  Password: $password"
  echo "  Pre-Shared Key: $psk"
  echo "  Type: L2TP/IPSec PSK"
  echo "  ------------------------------"
  echo ""

  (systemctl restart xl2tpd && systemctl restart strongswan-starter) &
  spinner $! "Restarting L2TP services..."
}

function list_users() {
  echo ""
  echo "-------------------------------"
  echo "           USER LIST           "
  echo "-------------------------------"

  echo "  --- PPTP Users ---"
  echo "  Username        Password"
  echo "  --------        --------"
  grep pptpd /etc/ppp/chap-secrets | awk '{print "  " $1 "\t\t" $3}'

  echo ""
  echo "  --- L2TP Users ---"
  echo "  Username        Password"
  echo "  --------        --------"
  grep -v pptpd /etc/ppp/chap-secrets | awk '{print "  " $1 "\t\t" $3}'

  echo ""
  echo "  --- Connection Info ---"
  echo "  Server IP: $SERVER_IP"
  echo "  L2TP PSK: $(grep -oP '(?<=: PSK ")[^"]+' /etc/ipsec.secrets 2>/dev/null || echo 'myvpnkey')"
  echo "  ------------------------------"
}

function delete_user() {
  echo ""
  echo "-------------------------------"
  echo "          DELETE USER          "
  echo "-------------------------------"

  echo -ne "  » Username to delete: "
  read username

  if sed -i "/^$username /d" /etc/ppp/chap-secrets; then
    echo ""
    echo "  ✓ User $username deleted successfully!"
    (systemctl restart pptpd && systemctl restart xl2tpd) &
    spinner $! "Restarting services..."
  else
    echo ""
    echo "  ✗ Failed to delete user $username"
  fi
}

function show_status() {
  echo ""
  echo "-------------------------------"
  echo "        SERVICE STATUS         "
  echo "-------------------------------"

  status_service "PPTP Service" "pptpd"
  status_service "L2TP/IPSec (strongSwan)" "strongswan-starter"
  status_service "L2TP (xl2tpd)" "xl2tpd"

  echo ""
  echo "  --- Connection Info ---"
  echo "  Server IP: $SERVER_IP"
  echo "  L2TP PSK: $(grep -oP '(?<=: PSK ")[^"]+' /etc/ipsec.secrets 2>/dev/null || echo 'myvpnkey')"
  echo "  ------------------------------"
}

function connection_guide() {
  echo ""
  echo "-------------------------------"
  echo "       CONNECTION GUIDE        "
  echo "-------------------------------"

  echo ""
  echo "  --- PPTP Connection Guide ---"
  echo "  Windows:"
  echo "    1. Network Settings > VPN > Add VPN"
  echo "    2. Select PPTP"
  echo "    3. Server: $SERVER_IP"
  echo "    4. Username/Password: See user list"
  echo "    5. Encryption: Automatic"

  echo ""
  echo "  Android:"
  echo "    1. Settings > Network > VPN > Add VPN"
  echo "    2. Select PPTP and enter details"

  echo ""
  echo "  --- L2TP/IPSec Connection Guide ---"
  echo "  Windows:"
  echo "    1. Network Settings > VPN > Add VPN"
  echo "    2. Select L2TP/IPSec"
  echo "    3. Server: $SERVER_IP"
  echo "    4. Username/Password: See user list"
  echo "    5. Pre-shared key: $(grep -oP '(?<=: PSK ")[^"]+' /etc/ipsec.secrets 2>/dev/null || echo 'myvpnkey')"

  echo ""
  echo "  Android:"
  echo "    1. Settings > Network > VPN > Add VPN"
  echo "    2. Select L2TP/IPSec PSK and enter details"

  echo ""
  echo "  ------------------------------"
  echo "  Note: Ensure VPN services are running before connecting"
  echo "  Note: Use strong passwords for security"
  echo "  ------------------------------"
}

function main_menu() {
  show_banner
  echo "  -------------------------------"
  echo "  MAIN MENU                      "
  echo "  -------------------------------"
  echo "  1) Add PPTP User               "
  echo "  2) Add L2TP User               "
  echo "  3) View User List              "
  echo "  4) Delete User                 "
  echo "  5) Service Status              "
  echo "  6) Connection Guide            "
  echo "  7) Exit                        "
  echo "  8) MENU                        "
  echo "  -------------------------------"
  echo -ne "  » Select option [1-7]: "
  read pilihan

  case $pilihan in
    1) add_pptp_user ;;
    2) add_l2tp_user ;;
    3) list_users ;;
    4) delete_user ;;
    5) show_status ;;
    6) connection_guide ;;
    8) menu ;;
    7) echo ""; echo "Exiting..."; exit 0 ;;
    *) echo ""; echo "Invalid selection!" ;;
  esac

  echo ""
  echo "Press ENTER to return to menu..."
  read -p ""
  main_menu
}

# Check root
if [ "$(id -u)" != "0" ]; then
  echo "This script must be run as root" 1>&2
  exit 1
fi

main_menu
